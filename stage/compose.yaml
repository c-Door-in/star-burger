services:
  frontend:
    image: star-burger-frontend
    container_name: star-burger-frontend
    volumes:
      - staticfiles:/app/staticfiles

  django_backend:
    image: star-burger-backend
    container_name: star-burger-backend
    command: gunicorn -w 3 -b 0.0.0.0:8080 star_burger.wsgi:application
    env_file: .env
    depends_on:
      - django_migrate
    restart: always
    ports:
      - 8080:8080
      
  django_collectstatic:
    image: star-burger-backend
    container_name: star-burger-django-collectstatic
    command: python3 manage.py collectstatic --noinput
    volumes:
      - staticfiles:/app/staticfiles
    env_file: .env

  django_migrate:
    image: star-burger-backend
    container_name: star-burger-migrate
    command: python3 manage.py migrate --noinput
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-bookworm
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    healthcheck:
      test: "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
      interval: 2s
      timeout: 2s
      retries: 5
    restart: always
    expose:
      - 5432
  
volumes:
  postgres_data:
  staticfiles:
     driver_opts:
           type: none
           device: /var/www/docker-star-burger-site/staticfiles
           o: bind
  